``100-matrix_mul`` module
===============================
using ``matrix_mul``
===============================

``matrix_mul()``  multiplies 2 matrices

::

    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul
    >>> matrix_mul([[1, 5]], [[1,4], [5, 10]])
    [[26, 54]]

::

    >>> matrix_mul([[10, 20, 30], [40, 50, 60]], [[70, 80, 90], [100, 110, 120], [130, 140, 150]])
    [[6600, 7200, 7800], [15600, 17100, 18600]]
        
Edge Cases
===========

::

    >>> matrix_mul(5, 6)
    Traceback (most recent call last):
	...
    TypeError: m_a must be a list

::

    >>> matrix_mul([[5, 6]], 5)
    Traceback (most recent call last):
        ...
    TypeError: m_b must be a list

::

    >>> matrix_mul([[5, 6]], [])
    Traceback (most recent call last):
	...
    ValueError: m_b can't be empty

::

    >>> matrix_mul([[]], [[5, 6]])
    Traceback (most recent call last):
	...
    ValueError: m_a can't be empty

::

   >>> matrix_mul([["abc", 5]], [[5, 6]])
   Traceback (most recent call last):
	...
   TypeError: m_a should contain only integers or floats

::

   >>> matrix_mul([[7.5, 5], [1]], [[5, 6]])
   Traceback (most recent call last):
	...
   TypeError: each row of m_a must be of the same size

::

   >>> matrix_mul([[7.5, 5], [1, 10]], [[5, 6, 10]])
   Traceback (most recent call last):
	...
   ValueError: m_a and m_b can't be multiplied
