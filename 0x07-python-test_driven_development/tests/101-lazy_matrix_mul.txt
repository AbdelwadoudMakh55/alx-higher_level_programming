``101-lazy_matrix_mul`` module
===============================
using ``lazy_matrix_mul``
===============================

``lazy_matrix_mul()``  multiplies 2 matrices

::

    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul
    >>> lazy_matrix_mul([[1, 5]], [[1,4], [5, 10]])
    array([[26, 54]])

::

    >>> lazy_matrix_mul([[10, 20, 30], [40, 50, 60]], [[70, 80, 90], [100, 110, 120], [130, 140, 150]])
    array([[ 6600,  7200,  7800],
     	   [15600, 17100, 18600]])

::

    >>> lazy_matrix_mul([5, 6], [[6, 7], [5, 10]])
    array([60, 95])

Edge Cases
===========

::

    >>> lazy_matrix_mul(5, [[1, 2], [3, 4]])
    Traceback (most recent call last):
	...
    ValueError: Scalar operands are not allowed, use '*' instead

::

    >>> lazy_matrix_mul([[3, 4], [5, 6]], [])
    Traceback (most recent call last):
        ...
    ValueError: shapes (2,2) and (0,) not aligned: 2 (dim 1) != 0 (dim 0)

::

    >>> lazy_matrix_mul([[3, 4], [5, 6]], [[]])
    Traceback (most recent call last):
	...
    ValueError: shapes (2,2) and (1,0) not aligned: 2 (dim 1) != 1 (dim 0)

::

    >>> lazy_matrix_mul([["abc", "abc"]], [["abc", "azee"], ["abc", "azee"]])
    Traceback (most recent call last):
	...
    TypeError: Cannot cast scalar from dtype('bool') to dtype('<U4') according to the rule 'safe'

::

   >>> lazy_matrix_mul([5, 6], [[6, 7], [5]])
   Traceback (most recent call last):
	...
   ValueError: setting an array element with a sequence.

::

   >>> lazy_matrix_mul([[5, 10], [10, 12]], [[6, 5]])
   Traceback (most recent call last):
	...
   ValueError: shapes (2,2) and (1,2) not aligned: 2 (dim 1) != 1 (dim 0)

